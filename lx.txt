let da = document.querySelectorAll(".KL4NAf");
let arr=[];
for(let i=0;i<da.length;i++) arr.push(da[i].innerHTML);
arr.map(item=>console.log(item.slice(0,-4)));

*---------- ------ 01 Intro to Python ------ ----------*
01-01 Welcome to this course!
01-02 Overview of the course curriculum
01-03 Introduction to this section
01-04 Our Python coding environment
01-05 Numbers and printing in Python
01-06 Python strings and string formatting
01-07 Getting user input in Python
01-08 Boolean and comparisons in Python
01-09 Lists, tuples, and sets in Python
01-10 Advanced set operations
01-11 Python dictionaries
01-12 Calculating the length of lists
01-13 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*---------- 02 Functions and loops in Python ----------*
02-01 Introduction to this section
02-02 If statements in Python
02-03 While loops in Python
02-04 For loops, range(), and tuple destructuring in Python
02-05 Two important loop keywords + finding prime numbers
02-06 List slicing in Python
02-07 List comprehension in Python
02-08 Set and dictionary comprehensions
02-09 Functions, arguments, and parameters in Python
02-10 Functions and return values in Python
02-11 Lambda, first-class, and higher order functions in Python
02-12 Conclusion of this section
---------- ---------- ---------- ---------- ----------

*---------- --- 03 Milestone (Project 1) --- ----------*
03-01 Introduction to this section
03-02 Installing Python in your computer
03-03 Installing PyCharm in your computer
03-04 Creating our first PyCharm project
03-05 Setting up PyCharm font and display settings
03-06 Coding our application's menu in Python
03-07 Adding new movies to our application
03-08 Showing the user their movies
03-09 Finding movies and retrieving their details
03-10 Conclusion of this section
---------- ---------- ---------- ---------- ----------

*----- 04 Object-Oriented Programming with Python -----*
04-01 Introduction to this section
04-02 Intro to Object-Oriented Programming with Python
04-03 More about classes and objects
04-04 Parameter naming in Python
04-05 Magic methods in Python
04-06 Inheritance in Python
04-07 The @property decorator
04-08 @classmethod and @staticmethod in Python
04-09 More @classmethod and @staticmethod examples
04-10 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*---------- ----- 05 Errors in Python ------ ----------*
05-01 Introduction to this section
05-02 Intro to errors in Python
05-03 Built in errors in Python
05-04 Raising errors in Python
05-05 Creating our own errors in Python
05-06 Dealing with Python errors
05-07 The on success block and re-raising exceptions
05-08 Handling those pesky user errors!
05-09 Debugging with Pycharm
05-10 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*---------- ------ 06 Files in Python ------ ----------*
06-01 Introduction to this section
06-02 Files in Python
06-03 Python Exercise. Copying files
06-04 CSV files with Python
06-05 JSON files with Python
06-06 Using the with syntax in Python
06-07 Importing our own files
06-08 Python relative imports. Children
06-09 Python relative imports. Parents
06-10 Import errors and running as a Python script
06-11 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*--- 07 Databases in Python & Milestone (Project 2) ---*
07-01 Introduction to this section
07-02 Intro to Milestone (Project 2)
07-03 Milestone Project with lists
07-04 Storing books in files
07-05 Using JSON instead of CSV
07-06 Intro to databases with Python
07-07 Using SQLite in Python
07-08 Some database jargon
07-09 Creating our books table using Python
07-10 Inserting books using Python
07-11 SELECT examples
07-12 Getting all our books
07-13 UPDATE and DELETE
07-14 Filtering with WHERE
07-15 Finishing the Milestone Project
07-16 Ordering and limiting
07-17 Developing our context manager in Python
07-18 Errors in context managers
07-19 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*---------- --- 08 Type hinting in Python -- ----------*
08-01 Introduction to this section 
08-02 Typing in Python 
08-03 Further reading 
08-04 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*------ 09 Advanced built-in functions in Python ------*
09-01 Introduction to this section 
09-02 Generators in Python 
09-03 Python generator classes and iterators 
09-04 Iterables in Python 
09-05 The filter() function in Python 
09-06 The map() function in Python 
09-07 any() and all() in Python 
09-08 The enumerate() function 
09-09 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*---------- - 10 Advanced Python Development ----------*
10-01 Introduction to this section 
10-02 Mutability in Python 
10-03 Argument mutability in Python 
10-04 Default values for parameters 
10-05 Mutable default arguments (bad idea) 
10-06 Argument unpacking in Python 
10-07 Queues in Python 
10-08 Some interesting Python collections 
10-09 Timezones 
10-10 Dates and time in Python 
10-11 Timing your code with Python 
10-12 Regular expressions 
10-13 Regex examples 
10-14 Introduction to logging in Python 
10-15 Logging to a file and other features 
10-16 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*---------- -- 11 Web Scraping with Python - ----------*
11-01 Introduction to this section 
11-02 Understanding HTML with BeautifulSoup 
11-03 More complex HTML parsing 
11-04 Structuring our parsing program better 
11-05 Splitting HTML locators out of our Python class 
11-06 Understanding HTML with the browser 
11-07 Scraping our first website with Python 
11-08 Milestone Project 3. A Quote Scraper 
11-09 Quotes Project 2. Structuring a scraping app in Python 
11-10 Quotes Project 3. Getting our locators 
11-11 Quotes Project 4. Crafting our quote parser 
11-12 Quotes Project 5. The quotes page 
11-13 Quotes Project 6. Recap of the project
11-14 Milestone Project 4. A Book Scraper + application 
11-15 Books Project 2. Recap of HTML locators 
11-16 Books Project 3. Creating locators in Python 
11-17 Books Project 4. Creating our page 
11-18 Books Project 5. Creating our book parser 
11-19 Books Project 6. Writing our app file 
11-20 Books Project 7. Sorting the books 
11-21 Books Project 8. Constructing our menu 
11-22 ASIDE. The best way to write user menus 
11-23 Books Project 9. Getting multiple pages 
11-24 Books Project 10. Multiple pages in Python 
11-25 Books Project 11. Getting the page count in Python 
11-26 Books Project 12. Adding logging to our Python project 
11-27 A word on scraping pages with JavaScript 
11-28 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*--------- 12 Asynchronous Python Development ---------*
12-01 Introduction to this section
12-02 The Dining Philosophers Problem
12-03 Processes and threads
12-04 The Python GIL
12-05 Example. Threads in Python
12-06 Using Python concurrent.futures. The ThreadPoolExecutor
12-07 Don't kill threads!
12-08 Multiprocessing in Python
12-09 Using Python concurrent.futures. The ProcessPoolExecutor
12-10 Dealing with shared state in threads
12-11 Queuing in threads with shared state
12-12 Using Python generators instead of threads
12-13 Our first single-threaded task scheduler in Python
12-14 Yielding from another iterator in Python
12-15 Receiving data through yield
12-16 The async and await keywords
12-17 Watch these talks for more explanations and examples!
12-18 Our asynchronous scraper
12-19 Making our first async request in Python
12-20 Getting multiple pages efficiently
12-21 Using async_timeout for security
12-22 Turning our book scraping project async
12-23 A note on HTTPS with Python and Mac OS X
12-24 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*13 Python on the console and managing project dependencies*
13-01 Intro to this section
13-02 Running Python in the console
13-03 Terminal video. Running Python
13-04 Terminal video. What is a virtualenv
13-05 Terminal video. Navigating the terminal and using virtualenv
13-06 Terminal video. Using Pipenv
13-07 Terminal video. Pipenv and virtualenv
13-08 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*---------- - 14 Web Development with Flask  ----------*
14-01 Intro to this section
14-02 Setting up our project with Pipenv
14-03 Our first Flask endpoint
14-04 Returning information with Flask and Python
14-05 Rendering HTML with Flask and Python
14-06 Error pages and Jinja2 inheritance

14-07 Rendering forms with Flask and Python
14-08 Accessing POST form data with Flask
14-09 Putting our form in a single endpoint
14-10 Using Jinja2 for loops to create a nicer homepage
14-11 Adding navigation to our website
14-12 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*---------- ---- 15 Decorators in Python --- ----------*
15-01 Introduction to this section
15-02 A simple decorator in Python
15-03 Using a @syntax
15-04 Functools wraps in Python
15-05 Decorating functions with parameters
15-06 Decorators with parameters
15-07 Functions that accept multiple arguments
15-08 Generic decorators for any function
15-09 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*

*------ 16 Advanced Object-Oriented Programming -------*
16-01 Introduction to this section
16-02 Intro to multiple inheritance with Python
16-03 Intro to ABCs in Python
16-04 The usefulness of ABCs
16-05 The relationship between ABCs and interfaces
16-06 The property setter in Python
16-07 Conclusion of this section
*---------- ---------- ---------- ---------- ----------*
